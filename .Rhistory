group_by(abiotic_hab) %>%
summarize(n_spp = length(unique(species)))
prop_biodiversity <- biodiversity %>%
drop_na(species,n) %>%
select(-c(species, n, biotic_hab)) %>%
group_by(vertical_transect, quadrat, square) %>%
summarize(proportion = )
View(merged_data_1)
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
merged_data_1 <- merged_data_1 %>%
select(-c(biotic_hab, per_mussel, per_barnacle, per_upright, per_crust, num_snail, num_crab))
#number of individuals per species in the 10 squares
quad_shannon <- biodiversity %>%
drop_na(n) %>%
group_by (vertical_transect, quadrat, species) %>%
summarize(n_per_species = sum(n))
#of species per quadrat
quad_species_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(species_count_per_quadrat = count(species))
View(cover)
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
merged_data_1 <- merged_data_1 %>%
select(-c(biotic_hab, per_mussel, per_barnacle, per_upright, per_crust, num_snail, num_crab))
#number of individuals per species in the 10 squares
quad_shannon <- biodiversity %>%
drop_na(n) %>%
group_by (vertical_transect, quadrat, species) %>%
summarize(n_per_species = sum(n))
#of species per quadrat
quad_species_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(species_count_per_quadrat = n())
#total number of individuals of all species in quadrat found in the 10 squares
quad_total <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(n_total_per_quadrat = sum(n))
quad_shannon <- merge(quad_shannon, quad_total, all = TRUE, by = c('vertical_transect', 'quadrat'))
quad_shannon <- quad_shannon %>%
drop_na(species) %>%
mutate(p_i = n_per_species/n_total_per_quadrat) %>%
mutate(Pi_lnPi = p_i*log(p_i))
#calulating shannon wiener for each quadrat and adding to merged data
shannon_index <- quad_shannon %>%
group_by(vertical_transect, quadrat) %>%
summarize(H = -sum(Pi_lnPi))
merged_data_2 <- merge(quad_shannon, cover)
merged_data_3 <- merge(merged_data_1, shannon_index)
View(merged_data_3)
#of species per quadrat
quad_species_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(species_count_per_quadrat = n())
View(quad_species_count)
View(biodiversity)
quad_species_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat)
quad_species_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species)
#of species per quadrat
quad_species_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(species_count_per_quadrat = n())
#of species per quadrat
quad_species_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(occ_count_per_quadrat = n())
#of species per quadrat
quad_occ_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(occ_count_per_quadrat = n())
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
merged_data_1 <- merged_data_1 %>%
select(-c(biotic_hab, per_mussel, per_barnacle, per_upright, per_crust, num_snail, num_crab))
#number of individuals per species in the 10 squares
quad_shannon <- biodiversity %>%
drop_na(n) %>%
group_by (vertical_transect, quadrat, species) %>%
summarize(n_per_species = sum(n))
#of species per quadrat
quad_occ_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(occ_count_per_quadrat = n())
quad_species_count <- quad_occ_count %>%
#total number of individuals of all species in quadrat found in the 10 squares
quad_total <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(n_total_per_quadrat = sum(n))
View(quad_occ_count)
quad_species_count <- quad_occ_count %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(species_per_quad = n())
View(quad_species_count)
quad_species_count <- quad_occ_count %>%
group_by(vertical_transect, quadrat) %>%
summarize(species_per_quad = n())
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
merged_data_1 <- merged_data_1 %>%
select(-c(biotic_hab, per_mussel, per_barnacle, per_upright, per_crust, num_snail, num_crab))
#number of individuals per species in the 10 squares
quad_shannon <- biodiversity %>%
drop_na(n) %>%
group_by (vertical_transect, quadrat, species) %>%
summarize(n_per_species = sum(n))
#of occurrences per quadrat
quad_occ_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(occ_count_per_quadrat = n())
#of species per quadrat
quad_species_count <- quad_occ_count %>%
group_by(vertical_transect, quadrat) %>%
summarize(species_per_quad = n())
#total number of individuals of all species in quadrat found in the 10 squares
quad_total <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(n_total_per_quadrat = sum(n))
quad_shannon_2 <- merge(quad_shannon, quad_total, all = TRUE, by = c('vertical_transect', 'quadrat'))
quad_shannon_3 <- quad_shannon_2 %>%
drop_na(species) %>%
mutate(p_i = n_per_species/n_total_per_quadrat) %>%
mutate(Pi_lnPi = p_i*log(p_i))
#calulating shannon wiener for each quadrat and adding to merged data
shannon_index <- quad_shannon_3 %>%
group_by(vertical_transect, quadrat) %>%
summarize(H = -sum(Pi_lnPi))
merged_data_2 <- merge(quad_shannon, cover)
merged_data_3 <- merge(merged_data_1, shannon_index)
View(merged_data_1)
View(quad_shannon_3)
final_merged_data <- merge(merged_data_3, quad_species_count, all = TRUE, by = c('vertical_transect', 'quadrat'))
View(final_merged_data)
library(tidyverse)
library(here)
biodiversity = read_csv(here("./data/biodiversity.csv"))
knitr::kable(biodiversity, caption = "Biodiversity of invertebrates on various substrates")
cover = read_csv(here("./data/cover.csv"))
knitr::kable(biodiversity, caption = "Cover data")
quadrat = read_csv(here("./data/quadrat.csv"))
knitr::kable(biodiversity, caption = "Quadrat data")
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
merged_data_1 <- merged_data_1 %>%
select(-c(biotic_hab, per_mussel, per_barnacle, per_upright, per_crust, num_snail, num_crab))
#number of individuals per species in the 10 squares
quad_shannon <- biodiversity %>%
drop_na(n) %>%
group_by (vertical_transect, quadrat, species) %>%
summarize(n_per_species = sum(n))
#of occurrences per quadrat
quad_occ_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(occ_count_per_quadrat = n())
#of species per quadrat
quad_species_count <- quad_occ_count %>%
group_by(vertical_transect, quadrat) %>%
summarize(species_per_quad = n())
#total number of individuals of all species in quadrat found in the 10 squares
quad_total <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(n_total_per_quadrat = sum(n))
quad_shannon_2 <- merge(quad_shannon, quad_total, all = TRUE, by = c('vertical_transect', 'quadrat'))
quad_shannon_3 <- quad_shannon_2 %>%
drop_na(species) %>%
mutate(p_i = n_per_species/n_total_per_quadrat) %>%
mutate(Pi_lnPi = p_i*log(p_i))
#calulating shannon wiener for each quadrat and adding to merged data
shannon_index <- quad_shannon_3 %>%
group_by(vertical_transect, quadrat) %>%
summarize(H = -sum(Pi_lnPi))
merged_data_2 <- merge(quad_shannon, cover)
merged_data_3 <- merge(merged_data_1, shannon_index)
quad_biodiversity <- biodiversity %>%
drop_na(n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(n_spp = length(unique(species)))
species_biodiversity <- biodiversity %>%
drop_na(species, n) %>%
select(species, abiotic_hab) %>%
group_by(abiotic_hab) %>%
summarize(n_spp = length(unique(species)))
prop_biodiversity <- biodiversity %>%
drop_na(species,n) %>%
select(-c(species, n, biotic_hab)) %>%
group_by(vertical_transect, quadrat, square) %>%
summarize(proportion = )
final_merged_data <- merge(merged_data_3, quad_species_count, all = TRUE, by = c('vertical_transect', 'quadrat'))
View(final_merged_data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# load your packages (make sure they're installed if this is the first time you've used them)
#install.packages("performance")
library(performance)
#install.packages("agridat")
library(agridat)
#install.packages("viridis")
library(viridis)
#install.packages("scales")
library(scales)
library(tidyverse)
#intall.packages('see')
lirary(see)
# are you in the right working directory?
# Chunk 3
# load your data
data <- agridat::archbold.apple
# rep = block with 5 levels
# row = row
# pos = position within each row
# spacing = spacing between trees in feet
# stock = rootstock with 4 levels
# gen = genotype with 2 levels
# yield = total yield in kg/tree over 4 years
# trt = treatment code
# Chunk 4
apples <- data %>%
mutate(spacing = as.factor(spacing))
# Chunk 5
ggplot(apples, aes(spacing, yield, fill = spacing)) +
geom_boxplot() +
theme_classic() +
scale_fill_viridis(discrete = T) +
labs(x = "Spacing (ft)", y = "Yield (kg/tree)")
# Chunk 6
apples.mod <- lm(yield ~ spacing, data = apples)
summary(apples.mod)
# Chunk 7
#the mean was about 150 kg/tree
# Chunk 8
#we didn't check our assumptions before running
# Chunk 9
check_model(apples.mod)
# Chunk 10
sheep <- agridat::ilri.sheep
# there are confounding variables in this data set that we don't want to deal with right now, so let's filter for only lambs from mothers belonging to the 'R' breed
clean_sheep <- sheep %>%
filter(ewegen == "R")
# Chunk 11
sheep_visual <- ggplot(clean_sheep, aes(weanage, weanwt)) +
geom_point() +
theme_classic() +
scale_fill_viridis(discrete = T) +
labs(x = "Weaning age (days)", y = "Weaning weight (Kg)")
sheep_visual
# Chunk 12
sheep_mod <- lm(weanwt ~ weanage, data = clean_sheep)
summary(sheep_mod)
#p is less than 0.05, telling us there is a significant impact of weaning age on weaning weight
# Chunk 13
#the adjusted R-squared is 0.1981 (19.81%), so that is the amount of variance in meanwt explained by meanage
#the p value is 2.397e-15 (significant)
# Chunk 14
new_sheep_model <- lm(weanwt ~ weanage + sex + weanage*sex, data = clean_sheep)
summary(new_sheep_model)
#Adjusted R-squared is now 0.2231 (22.31%) and the p-value is 8.446e-16 (significant)
# Chunk 15
show_col(viridis_pal(option = "F")(8))
# Chunk 16
ggplot(clean_sheep, aes(x = weanage, y = weanwt)) +
geom_point(aes(colour = sex)) +
labs(x = "Age at weaning (days)", y = "Wean weight (kg)") +
stat_smooth(method = "lm", aes(fill = sex, colour = sex)) +
scale_fill_manual(values = c('#E13342FF', '#36193EFF')) +
scale_colour_manual(values = c('#E13342FF', '#36193EFF')) +
theme_classic()
# Chunk 17
#the model tells us that increasing age at weaning increases the wean weight, having a positive slope and a significant relationship. Both male and females have a similar relationship between age at weaning and wean weight (though males do tend to gain weight a bit faster with age) suggesting sex doesn't impact the relationship between those variables very much.
# Chunk 18
plot(new_sheep_model)
library(MASS) # a statistical package, but also has the dataset "snails"
library(patchwork)
library(tidyverse) # our tried and true R friend. Also loads up ggplot!
# Chunk 2
data = snails %>%
mutate(Species = if_else(Species == "A", "Purple-Ring Topsnail", "Red Turban Snail"))
# Chunk 3
head(data) # top of the data frame
tail(data) # bottom of the data frame
dim(data) # dimensions of the data frame (we can also look in the environment)
summary(data)
# Chunk 4
data_snails = data %>%
mutate(percent_survival = ((N-Deaths)/N)*100)
# Chunk 5
ggplot(data_snails, aes(x = Exposure, y = percent_survival))
# Chunk 6
ggplot(data_snails, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_boxplot()
# Chunk 7
We would need to change the numerical values of exposure from a numerical value to a categorical one, this is because the class of our data impacts how R processes it
# Chunk 8
snailed_it = data_snails %>%
mutate(Exposure = as.factor(Exposure))
class(snailed_it$Exposure)
# Chunk 9
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_boxplot()
# Chunk 10
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_boxplot() +
geom_point()
# Chunk 11
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_boxplot() +
geom_point(position = position_jitterdodge())
# Chunk 12
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species, colour = Species)) +
geom_boxplot() +
geom_point(position = position_jitterdodge())
# Chunk 13
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_boxplot() +
geom_point(aes(colour = Species), position = position_jitterdodge())
# Chunk 14
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot()
# Chunk 15
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.5)
# Chunk 16
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "tomato")
# Chunk 17
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.5) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
# Chunk 18
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_classic()
# Chunk 19
p1 =
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
p2 =
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_bw()
p1 + p2
# Chunk 20
p7=ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_grey()
p8=ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_dark()
p9=ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_void()
# Chunk 21
(p7/p8)|p9
# Chunk 22
head(snailed_it)
# Chunk 23
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
facet_grid(Temp ~ .) +
theme_bw()
# Chunk 24
ggplot(snailed_it, aes(x = Exposure, y = percent_survival, fill = Species)) +
geom_point(aes(colour = Species), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
ylab("Survival (%)") +
xlab("Treatment Exposure") +
facet_grid(. ~ Temp) +
theme_bw()
# Chunk 25
ggsave(plot = last_plot(), filename = "plot.pdf")
# Chunk 26
ggsave(plot = p1, filename = "plot.pdf")
View(final_merged_data)
figure_data = final_merged_data %>%
mutate(quadrat = as.factor(quadrat))
figure_data = final_merged_data %>%
mutate("final_quad" = vertical_transect,quadrat)
mutate(quadrat = as.factor(quadrat))
figure_data = final_merged_data %>%
mutate(quadrat = as.factor(quadrat)) %>%
mutate(vertical_transect = as.factor(vertical_transect)) %>%
mutate("transect_quad" = vertical_transect,quadrat)
View(figure_data)
figure_data = final_merged_data %>%
mutate(quadrat = as.factor(quadrat)) %>%
mutate(vertical_transect = as.factor(vertical_transect)) %>%
mutate(transect_quad = vertical_transect, quadrat)
View(figure_data)
figure_data = final_merged_data %>%
mutate(quadrat = as.factor(quadrat)) %>%
mutate(vertical_transect = as.factor(vertical_transect)) %>%
unite(transect_quad, vertical_transect, quadrat)
View(figure_data)
ggplot(figure_data, aes(x = per_cobble, y = H, fill = transect_quad)) +
geom_point(aes(colour = transect_quad), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_classic()
ggplot(figure_data, aes(x = per_cobble, y = H, fill = transect_quad)) +
geom_point(aes(colour = transect_quad) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_classic()
ggplot(figure_data, aes(x = per_cobble, y = H, fill = transect_quad)) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols) +
theme_classic()
View(snailed_it)
library(tidyverse)
library(here)
biodiversity = read_csv(here("./data/biodiversity.csv"))
knitr::kable(biodiversity, caption = "Biodiversity of invertebrates on various substrates")
cover = read_csv(here("./data/cover.csv"))
knitr::kable(biodiversity, caption = "Cover data")
quadrat = read_csv(here("./data/quadrat.csv"))
knitr::kable(biodiversity, caption = "Quadrat data")
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
merged_data_1 <- merged_data_1 %>%
select(-c(biotic_hab, per_mussel, per_barnacle, per_upright, per_crust, num_snail, num_crab))
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
merged_data_1 <- merged_data_1 %>%
select(-c(biotic_hab, per_mussel, per_barnacle, per_upright, per_crust, num_snail, num_crab))
merged_data_1 = merge(biodiversity, cover)
head(merged_data_1)
#number of individuals per species in the 10 squares
quad_shannon <- biodiversity %>%
drop_na(n) %>%
group_by (vertical_transect, quadrat, species) %>%
summarize(n_per_species = sum(n))
#of occurrences per quadrat
quad_occ_count <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat, species) %>%
summarize(occ_count_per_quadrat = n())
#of species per quadrat
quad_species_count <- quad_occ_count %>%
group_by(vertical_transect, quadrat) %>%
summarize(species_per_quad = n())
#total number of individuals of all species in quadrat found in the 10 squares
quad_total <- biodiversity %>%
drop_na(species, n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(n_total_per_quadrat = sum(n))
quad_shannon_2 <- merge(quad_shannon, quad_total, all = TRUE, by = c('vertical_transect', 'quadrat'))
quad_shannon_3 <- quad_shannon_2 %>%
drop_na(species) %>%
mutate(p_i = n_per_species/n_total_per_quadrat) %>%
mutate(Pi_lnPi = p_i*log(p_i))
#calulating shannon wiener for each quadrat and adding to merged data
shannon_index <- quad_shannon_3 %>%
group_by(vertical_transect, quadrat) %>%
summarize(H = -sum(Pi_lnPi))
merged_data_2 <- merge(quad_shannon, cover)
merged_data_3 <- merge(merged_data_1, shannon_index)
quad_biodiversity <- biodiversity %>%
drop_na(n) %>%
group_by(vertical_transect, quadrat) %>%
summarize(n_spp = length(unique(species)))
species_biodiversity <- biodiversity %>%
drop_na(species, n) %>%
select(species, abiotic_hab) %>%
group_by(abiotic_hab) %>%
summarize(n_spp = length(unique(species)))
View(biodiversity)
